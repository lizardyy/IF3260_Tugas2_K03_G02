var r = 0.2
var g = 0.1
var b = 0.4
var model = []
var indices = []


var cubeVertices = 
    [
        // top
        -1.0, 1.0, -1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        -1.0, 1.0, 1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        1.0, 1.0, 1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        1.0, 1.0, -1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,

        // bottom
        -1.0, -1.0, -1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        -1.0, -1.0, 1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        1.0, -1.0, 1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        1.0, -1.0, -1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,

        // left
        -1.0, 1.0, 1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        -1.0, -1.0, 1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        -1.0, -1.0, -1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        -1.0, 1.0, -1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,

        // right
        1.0, 1.0, 1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        1.0, -1.0, 1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        1.0, -1.0, -1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        1.0, 1.0, -1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,

        // front
        1.0, 1.0, 1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        1.0, -1.0, 1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        -1.0, -1.0, 1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        -1.0, 1.0, 1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,

        // back
        1.0, 1.0, -1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        1.0, -1.0, -1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        -1.0, -1.0, -1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,
        -1.0, 1.0, -1.0, (0.25+r)/1.25, (0.25+g)/1.25, (0.25+b)/1.25,

        // inner top
        -0.75, 0.75, -0.75, r/1.2, g/1.2, b/1.2,
        -0.75, 0.75, 0.75, r/1.2, g/1.2, b/1.2,
        0.75, 0.75, 0.75, r/1.2, g/1.2, b/1.2,
        0.75, 0.75, -0.75, r/1.2, g/1.2, b/1.2,

        // inner bottom
        -0.75, -0.75, -0.75, r/1.2, g/1.2, b/1.2,
        -0.75, -0.75, 0.75, r/1.2, g/1.2, b/1.2,
        0.75, -0.75, 0.75, r/1.2, g/1.2, b/1.2,
        0.75, -0.75, -0.75, r/1.2, g/1.2, b/1.2,

        // inner left
        -0.75, 0.75, 0.75, r/1.2, g/1.2, b/1.2,
        -0.75, -0.75, 0.75, r/1.2, g/1.2, b/1.2,
        -0.75, -0.75, -0.75, r/1.2,g/1.2,b/1.2,
        -0.75, 0.75, -0.75, r/1.2, g/1.2, b/1.2,

        // inner right
        0.75, 0.75, 0.75, r/1.2, g/1.2, b/1.2,
        0.75, -0.75, 0.75, r/1.2, g/1.2, b/1.2,
        0.75, -0.75, -0.75, r/1.2,g/1.2,b/1.2,
        0.75, 0.75, -0.75, r/1.2, g/1.2, b/1.2,

        // inner front
        0.75, 0.75, 0.75, r/1.2, g/1.2, b/1.2,
        0.75, -0.75, 0.75, r/1.2, g/1.2, b/1.2,
        -0.75, -0.75, 0.75, r/1.2, g/1.2, b/1.2,
        -0.75, 0.75, 0.75, r/1.2, g/1.2, b/1.2,

        // inner back
        0.75, 0.75, -0.75, r/1.2, g/1.2, b/1.2,
        0.75, -0.75, -0.75, r/1.2, g/1.2, b/1.2,
        -0.75, -0.75, -0.75, r/1.2, g/1.2, b/1.2,
        -0.75, 0.75, -0.75, r/1.2, g/1.2, b/1.2,

        // face top
        -0.75, 1.00, -0.75, r, g, b,
        -0.75, 1.00, 0.75, r, g, b,
        0.75, 1.00, 0.75, r, g, b,
        0.75, 1.00, -0.75, r, g, b,

        // face bottom
        -0.75, -1.00, -0.75, r, g, b,
        -0.75, -1.00, 0.75, r, g, b,
        0.75, -1.00, 0.75, r, g, b,
        0.75, -1.00, -0.75, r, g, b,

        // face left
        -1.00, 0.75, 0.75, r, g, b,
        -1.00, -0.75, 0.75, r, g, b,
        -1.00, -0.75, -0.75, r,g,b,
        -1.00, 0.75, -0.75, r, g, b,

        // face right
        1.00, 0.75, 0.75, r, g, b,
        1.00, -0.75, 0.75, r, g, b,
        1.00, -0.75, -0.75, r,g,b,
        1.00, 0.75, -0.75, r, g, b,

        // face front
        0.75, 0.75, 1.00, r, g, b,
        0.75, -0.75, 1.00, r, g, b,
        -0.75, -0.75, 1.00, r, g, b,
        -0.75, 0.75, 1.00, r, g, b,

        // face back
        0.75, 0.75, -1.00, r, g, b,
        0.75, -0.75, -1.00, r, g, b,
        -0.75, -0.75, -1.00, r, g, b,
        -0.75, 0.75, -1.00, r, g, b,

    ]

var cubeIndices = []
for(var i=0; i<6; i++){
    for(var j=0; j<4; j++){
        var k = (j+1)%4;
        cubeIndices.push(4*i+j);
        cubeIndices.push(4*i+k);
        cubeIndices.push(4*i+48+j);
            
        cubeIndices.push(4*i+k);
        cubeIndices.push(4*i+48+j);
        cubeIndices.push(4*i+48+k);

        cubeIndices.push(4*i+24+j);
        cubeIndices.push(4*i+24+k);
        cubeIndices.push(4*i+48+j);

        cubeIndices.push(4*i+24+k);
        cubeIndices.push(4*i+48+j);
        cubeIndices.push(4*i+48+k);
    }
}

model.push(cubeVertices);
indices.push(cubeIndices);

var triangularPrismVertices =
    [
        // top
        -1.0, 1.0, 1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        1.0, 1.0, 1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        1.0, -1.0, 1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        1.0, 1.0, 1.0, (0.25 + r) / 1.25, (0.25 + g) / 1.25, (0.25 + b) / 1.25,

        // bottom
        -1.0, 1.0, -1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        1.0, 1.0, -1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        1.0, -1.0, -1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        1.0, 1.0, -1.0, (0.25 + r) / 1.25, (0.25 + g) / 1.25, (0.25 + b) / 1.25,

        // left
        -1.0, 1.0, 1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        1.0, 1.0, 1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        1.0, 1.0, -1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        -1.0, 1.0, -1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,

        // right
        1.0, 1.0, 1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        1.0, -1.0, 1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        1.0, -1.0, -1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        1.0, 1.0, -1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,

        // front
        -1.0, 1.0, 1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        1.0, -1.0, 1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        1.0, -1.0, -1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,
        -1.0, 1.0, -1.0, (0.25+r)/1.25,(0.25+g)/1.25,(0.25+b)/1.25,


        // inner top
        -0.75, 0.75, 0.75, r / 1.2, g / 1.2, b / 1.2,
        0.75, 0.75, 0.75, r / 1.2, g / 1.2, b / 1.2,
        0.75, -0.75, 0.75, r / 1.2, g / 1.2, b / 1.2,
        0.75, 0.75, 0.75, r / 1.2, g / 1.2, b / 1.2,

        // inner bottom
        -0.75, 0.75, -0.75, r / 1.2, g / 1.2, b / 1.2,
        0.75, 0.75, -0.75, r / 1.2, g / 1.2, b / 1.2,
        0.75, -0.75, -0.75, r / 1.2, g / 1.2, b / 1.2,
        0.75, 0.75, -0.75, r / 1.2, g / 1.2, b / 1.2,
        
        // inner left
        -0.75, 0.75, 0.75,  r/1.2,g/1.2,b/1.2,
        0.75, 0.75, 0.75,  r/1.2,g/1.2,b/1.2,
        0.75, 0.75, -0.75,  r/1.2,g/1.2,b/1.2,
        -0.75, 0.75, -0.75,  r/1.2,g/1.2,b/1.2,

        // inner right
        0.75, 0.75, 0.75,  r/1.2,g/1.2,b/1.2,
        0.75, -0.75, 0.75,  r/1.2,g/1.2,b/1.2,
        0.75, -0.75, -0.75,  r/1.2,g/1.2,b/1.2,
        0.75, 0.75, -0.75,  r/1.2,g/1.2,b/1.2,

        // inner front
        -0.75, 0.75, 0.75, r / 1.2, g / 1.2, b / 1.2,
        0.75, -0.75, 0.75, r / 1.2, g / 1.2, b / 1.2,
        0.75, -0.75, -0.75, r / 1.2, g / 1.2, b / 1.2,
        -0.75, 0.75, -0.75, r / 1.2, g / 1.2, b / 1.2,

        // face top
        -0.75, 0.75, 1, r, g, b,
        0.75, 0.75, 1, r, g, b,
        0.75, -0.75, 1, r, g, b,
        0.75, 0.75, 1, r, g, b,

        // face bottom
        -0.75, 0.75, -1, r,g,b,
        0.75, 0.75, -1, r,g,b,
        0.75, -0.75, -1, r,g,b,
        0.75, 0.75, -1, r,g,b,

        // face left
        -0.75, 1, 0.75,r,g,b,
        0.75, 1, 0.75,r,g,b,
        0.75, 1, -0.75,r,g,b,
        -0.75, 1, -0.75,r,g,b,

        // face right
        1, 0.75, 0.75, r,g,b,
        1, -0.75, 0.75, r,g,b,
        1, -0.75, -0.75, r,g,b,
        1, 0.75, -0.75, r,g,b,

        // face front
        -0.75, 0.75, 1, r , g , b ,
        0.75, -0.75, 1, r , g , b ,
        0.75, -0.75, -1, r , g , b ,
        -0.75, 0.75, -1, r , g , b ,

    ]


var triangularPrismIndices = []
for (var i = 0; i < 5; i++) {
    for (var j = 0; j < 4; j++) {
        var k = (j + 1) % 4;
        triangularPrismIndices.push(4 * i + j);
        triangularPrismIndices.push(4 * i + k);
        triangularPrismIndices.push(4 * i + 40 + j);

        triangularPrismIndices.push(4 * i + k);
        triangularPrismIndices.push(4 * i + 40 + j);
        triangularPrismIndices.push(4 * i + 40 + k);

        triangularPrismIndices.push(4 * i + 20 + j);
        triangularPrismIndices.push(4 * i + 20 + k);
        triangularPrismIndices.push(4 * i + 40 + j);

        triangularPrismIndices.push(4 * i + 20 + k);
        triangularPrismIndices.push(4 * i + 40 + j);
        triangularPrismIndices.push(4 * i + 40 + k);
    }
    
}

model.push(triangularPrismVertices);
indices.push(triangularPrismIndices);