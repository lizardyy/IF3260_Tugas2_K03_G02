var r = 0.2
var g = 0.1
var b = 0.4
var model = []
var indices = []


var cubeVertices = 
    [
        // top
        -1, 1, -1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        -1, 1, 1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        1, 1, 1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        1, 1, -1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,

        // bottom
        -1, -1, -1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        -1, -1, 1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        1, -1, 1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        1, -1, -1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,

        // left
        -1, 1, 1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        -1, -1, 1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        -1, -1, -1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        -1, 1, -1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,

        // right
        1, 1, 1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        1, -1, 1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        1, -1, -1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        1, 1, -1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,

        // front
        1, 1, 1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        1, -1, 1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        -1, -1, 1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        -1, 1, 1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,

        // back
        1, 1, -1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        1, -1, -1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        -1, -1, -1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,
        -1, 1, -1, (0.3+r)/1.4, (0.3+g)/1.4, (0.3+b)/1.4,

        // inner top
        -0.75, 0.75, -0.75, r/1.3, g/1.3, b/1.3,
        -0.75, 0.75, 0.75, r/1.3, g/1.3, b/1.3,
        0.75, 0.75, 0.75, r/1.3, g/1.3, b/1.3,
        0.75, 0.75, -0.75, r/1.3, g/1.3, b/1.3,

        // inner bottom
        -0.75, -0.75, -0.75, r/1.3, g/1.3, b/1.3,
        -0.75, -0.75, 0.75, r/1.3, g/1.3, b/1.3,
        0.75, -0.75, 0.75, r/1.3, g/1.3, b/1.3,
        0.75, -0.75, -0.75, r/1.3, g/1.3, b/1.3,

        // inner left
        -0.75, 0.75, 0.75, r/1.3, g/1.3, b/1.3,
        -0.75, -0.75, 0.75, r/1.3, g/1.3, b/1.3,
        -0.75, -0.75, -0.75, r/1.3,g/1.3,b/1.3,
        -0.75, 0.75, -0.75, r/1.3, g/1.3, b/1.3,

        // inner right
        0.75, 0.75, 0.75, r/1.3, g/1.3, b/1.3,
        0.75, -0.75, 0.75, r/1.3, g/1.3, b/1.3,
        0.75, -0.75, -0.75, r/1.3,g/1.3,b/1.3,
        0.75, 0.75, -0.75, r/1.3, g/1.3, b/1.3,

        // inner front
        0.75, 0.75, 0.75, r/1.3, g/1.3, b/1.3,
        0.75, -0.75, 0.75, r/1.3, g/1.3, b/1.3,
        -0.75, -0.75, 0.75, r/1.3, g/1.3, b/1.3,
        -0.75, 0.75, 0.75, r/1.3, g/1.3, b/1.3,

        // inner back
        0.75, 0.75, -0.75, r/1.3, g/1.3, b/1.3,
        0.75, -0.75, -0.75, r/1.3, g/1.3, b/1.3,
        -0.75, -0.75, -0.75, r/1.3, g/1.3, b/1.3,
        -0.75, 0.75, -0.75, r/1.3, g/1.3, b/1.3,

        // face top
        -0.75, 1.00, -0.75, r, g, b,
        -0.75, 1.00, 0.75, r, g, b,
        0.75, 1.00, 0.75, r, g, b,
        0.75, 1.00, -0.75, r, g, b,

        // face bottom
        -0.75, -1.00, -0.75, r, g, b,
        -0.75, -1.00, 0.75, r, g, b,
        0.75, -1.00, 0.75, r, g, b,
        0.75, -1.00, -0.75, r, g, b,

        // face left
        -1.00, 0.75, 0.75, r, g, b,
        -1.00, -0.75, 0.75, r, g, b,
        -1.00, -0.75, -0.75, r,g,b,
        -1.00, 0.75, -0.75, r, g, b,

        // face right
        1.00, 0.75, 0.75, r, g, b,
        1.00, -0.75, 0.75, r, g, b,
        1.00, -0.75, -0.75, r,g,b,
        1.00, 0.75, -0.75, r, g, b,

        // face front
        0.75, 0.75, 1.00, r, g, b,
        0.75, -0.75, 1.00, r, g, b,
        -0.75, -0.75, 1.00, r, g, b,
        -0.75, 0.75, 1.00, r, g, b,

        // face back
        0.75, 0.75, -1.00, r, g, b,
        0.75, -0.75, -1.00, r, g, b,
        -0.75, -0.75, -1.00, r, g, b,
        -0.75, 0.75, -1.00, r, g, b,

    ]

var cubeIndices = []
for(var i=0; i<6; i++){
    for(var j=0; j<4; j++){
        var k = (j+1)%4;
        cubeIndices.push(4*i+j);
        cubeIndices.push(4*i+k);
        cubeIndices.push(4*i+48+j);
            
        cubeIndices.push(4*i+k);
        cubeIndices.push(4*i+48+j);
        cubeIndices.push(4*i+48+k);

        cubeIndices.push(4*i+24+j);
        cubeIndices.push(4*i+24+k);
        cubeIndices.push(4*i+48+j);

        cubeIndices.push(4*i+24+k);
        cubeIndices.push(4*i+48+j);
        cubeIndices.push(4*i+48+k);
    }
}

model.push(cubeVertices);
indices.push(cubeIndices);

var triangularPrismVertices =
    [
        // top
        -1, 1, 1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        1, 1, 1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        1, -1, 1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        1, 1, 1, (0.3 + r) / 1.4, (0.3 + g) / 1.4, (0.3 + b) / 1.4,

        // bottom
        -1, 1, -1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        1, 1, -1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        1, -1, -1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        1, 1, -1, (0.3 + r) / 1.4, (0.3 + g) / 1.4, (0.3 + b) / 1.4,

        // left
        -1, 1, 1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        1, 1, 1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        1, 1, -1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        -1, 1, -1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,

        // right
        1, 1, 1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        1, -1, 1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        1, -1, -1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        1, 1, -1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,

        // front
        -1, 1, 1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        1, -1, 1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        1, -1, -1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,
        -1, 1, -1, (0.3+r)/1.4,(0.3+g)/1.4,(0.3+b)/1.4,


        // inner top
        -0.75, 0.75, 0.75, r / 1.3, g / 1.3, b / 1.3,
        0.75, 0.75, 0.75, r / 1.3, g / 1.3, b / 1.3,
        0.75, -0.75, 0.75, r / 1.3, g / 1.3, b / 1.3,
        0.75, 0.75, 0.75, r / 1.3, g / 1.3, b / 1.3,

        // inner bottom
        -0.75, 0.75, -0.75, r / 1.3, g / 1.3, b / 1.3,
        0.75, 0.75, -0.75, r / 1.3, g / 1.3, b / 1.3,
        0.75, -0.75, -0.75, r / 1.3, g / 1.3, b / 1.3,
        0.75, 0.75, -0.75, r / 1.3, g / 1.3, b / 1.3,
        
        // inner left
        -0.75, 0.75, 0.75,  r/1.3,g/1.3,b/1.3,
        0.75, 0.75, 0.75,  r/1.3,g/1.3,b/1.3,
        0.75, 0.75, -0.75,  r/1.3,g/1.3,b/1.3,
        -0.75, 0.75, -0.75,  r/1.3,g/1.3,b/1.3,

        // inner right
        0.75, 0.75, 0.75,  r/1.3,g/1.3,b/1.3,
        0.75, -0.75, 0.75,  r/1.3,g/1.3,b/1.3,
        0.75, -0.75, -0.75,  r/1.3,g/1.3,b/1.3,
        0.75, 0.75, -0.75,  r/1.3,g/1.3,b/1.3,

        // inner front
        -0.75, 0.75, 0.75, r / 1.3, g / 1.3, b / 1.3,
        0.75, -0.75, 0.75, r / 1.3, g / 1.3, b / 1.3,
        0.75, -0.75, -0.75, r / 1.3, g / 1.3, b / 1.3,
        -0.75, 0.75, -0.75, r / 1.3, g / 1.3, b / 1.3,

        // face top
        -0.75, 0.75, 1, r, g, b,
        0.75, 0.75, 1, r, g, b,
        0.75, -0.75, 1, r, g, b,
        0.75, 0.75, 1, r, g, b,

        // face bottom
        -0.75, 0.75, -1, r,g,b,
        0.75, 0.75, -1, r,g,b,
        0.75, -0.75, -1, r,g,b,
        0.75, 0.75, -1, r,g,b,

        // face left
        -0.75, 1, 0.75,r,g,b,
        0.75, 1, 0.75,r,g,b,
        0.75, 1, -0.75,r,g,b,
        -0.75, 1, -0.75,r,g,b,

        // face right
        1, 0.75, 0.75, r,g,b,
        1, -0.75, 0.75, r,g,b,
        1, -0.75, -0.75, r,g,b,
        1, 0.75, -0.75, r,g,b,

        // face front
        -0.75, 0.75, 1, r , g , b ,
        0.75, -0.75, 1, r , g , b ,
        0.75, -0.75, -1, r , g , b ,
        -0.75, 0.75, -1, r , g , b ,

        // other
        0.75, -0.3964466094, 1, (0.3 + r) / 1.4, (0.3 + g) / 1.4, (0.3 + b) / 1.4,
        - 0.3964466094, 0.75, 1, (0.3 + r) / 1.4, (0.3 + g) / 1.4, (0.3 + b) / 1.4,
        0.75, -0.3964466094, 0.75, r / 1.3, g / 1.3, b / 1.3,
        -0.3964466094, 0.75, 0.75, r / 1.3, g / 1.3, b / 1.3,

        0.75, -0.3964466094, -1,  (0.3 + r) / 1.4, (0.3 + g) / 1.4, (0.3 + b) / 1.4,
        -0.3964466094, 0.75, -1,  (0.3 + r) / 1.4, (0.3 + g) / 1.4, (0.3 + b) / 1.4,
        0.75, -0.3964466094, -0.75, r / 1.3, g / 1.3, b / 1.3,
        - 0.3964466094, 0.75, -0.75, r / 1.3, g / 1.3, b / 1.3
    ]


var triangularPrismIndices = []
for (var i = 0; i < 5; i++) {
    for (var j = 0; j < 4; j++) {
        var k = (j + 1) % 4;
        triangularPrismIndices.push(4 * i + j);
        triangularPrismIndices.push(4 * i + k);
        triangularPrismIndices.push(4 * i + 40 + j);

        triangularPrismIndices.push(4 * i + k);
        triangularPrismIndices.push(4 * i + 40 + j);
        triangularPrismIndices.push(4 * i + 40 + k);

        triangularPrismIndices.push(4 * i + 20 + j);
        triangularPrismIndices.push(4 * i + 20 + k);
        triangularPrismIndices.push(4 * i + 40 + j);

        triangularPrismIndices.push(4 * i + 20 + k);
        triangularPrismIndices.push(4 * i + 40 + j);
        triangularPrismIndices.push(4 * i + 40 + k);
    }
    
}

// other
triangularPrismIndices.push(20, 22, 62)
triangularPrismIndices.push(40, 42, 60)
triangularPrismIndices.push(60, 40, 61)
triangularPrismIndices.push(62, 20, 63)
triangularPrismIndices.push(60, 61, 62)
triangularPrismIndices.push(62, 61, 63)

triangularPrismIndices.push(24, 26, 66)
triangularPrismIndices.push(66, 24, 67)
triangularPrismIndices.push(44, 46, 64)
triangularPrismIndices.push(64, 44, 65)
triangularPrismIndices.push(64, 65, 66)
triangularPrismIndices.push(66, 65, 67)

model.push(triangularPrismVertices);
indices.push(triangularPrismIndices);